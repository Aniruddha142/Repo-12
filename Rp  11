#include <stdio.h>
#include <stdlib.h>
#include <time.h>
// Merge function to merge two subarrays
void merge(int arr[], int l, int m, int r) {
 int n1 = m - l + 1;
 int n2 = r - m;
 // Create temporary arrays
 int L[n1], R[n2];
 // Copy data to temporary arrays L[] and R[]
 for (int i = 0; i < n1; i++)
 L[i] = arr[l + i];
 for (int j = 0; j < n2; j++)
 R[j] = arr[m + 1 + j];
 // Merge the temporary arrays back into arr[l..r]
 int i = 0; // Initial index of first subarray
 int j = 0; // Initial index of second subarray
 int k = l; // Initial index of merged subarray
 while (i < n1 && j < n2) {
 if (L[i] <= R[j]) {
 arr[k] = L[i];
 i++;
 } else {
 arr[k] = R[j];
 j++;
 }
 k++;
 }
 // Copy the remaining elements of L[], if any
 while (i < n1) {
 arr[k] = L[i];
42
Dept(s). of AI&ML and CD
 i++;
 k++;
 }
 // Copy the remaining elements of R[], if any
 while (j < n2) {
 arr[k] = R[j];
 j++;
 k++;
 }
}
// Merge Sort function
void mergeSort(int arr[], int l, int r) {
 if (l < r) {
 // Find the middle point
 int m = l + (r - l) / 2;
 // Sort first and second halves
 mergeSort(arr, l, m);
 mergeSort(arr, m + 1, r);
 // Merge the sorted halves
 merge(arr, l, m, r);
 }
}
int main() {
 int n;
 clock_t start, end;
 double time_used;
 printf("Enter the number of elements: ");
 scanf("%d", &n);
 int *arr = (int *)malloc(n * sizeof(int));
 if (arr == NULL) {
 printf("Memory allocation failed\n");
 return 1;
 }
 printf("Enter %d integers:\n", n);
 for (int i = 0; i < n; i++) {
 scanf("%d", &arr[i]);
 }
43
Dept(s). of AI&ML and CD
 start = clock();
 mergeSort(arr, 0, n - 1);
 end = clock();
 printf("Sorted array: \n");
 for (int i = 0; i < n; i++) {
 printf("%d ", arr[i]);
 }
 time_used = ((double)(end - start)) / CLOCKS_PER_SEC;
 printf("\nTime taken: %lf seconds\n", time_used);
 free(arr);
 return 0;
}
